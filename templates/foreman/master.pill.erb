#! /bin/sh
### BEGIN INIT INFO
# Provides:          <%= app %>
# Required-Start:    $remote_fs $syslog
# Required-Stop:     $remote_fs $syslog
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: Generated initscript for <%= app %>
# Description:       This file starts <%= app %>. It should be placed in /etc/init.d
### END INIT INFO

# Auto generated by Buildable

PATH=/sbin:/usr/sbin:/bin:/usr/bin
NAME=<%= app %>
USERNAME=<%= user %>
<% engine.each_process do |name, process| -%>
<%= name %>_pidfile=/var/run/<%= app %>/<%= name %>.pid
<% end -%>

[ -r /lib/lsb/init-functions ] &&. /lib/lsb/init-functions

#
# Function that starts the service
#
do_start()
{
<% engine.each_process do |name, process| -%>
  log_daemon_msg "start <%= name %>"
  <%= name %>_running
  if [ $? -ne 0 ]; then
    start_<%= name %>
  else
    log_end_msg 1
    log_action_msg "<%= name %> it is already running!"
  fi

<% end -%>
}

#
# Function that stops the service
#
do_stop()
{
<% engine.each_process do |name, process| -%>
  log_daemon_msg "stop <%= name %>"
  kill `cat $<%= name %>_pidfile 2> /dev/null` 2> /dev/null &&  rm $<%= name %>_pidfile 2> /dev/null
  log_end_msg $?

<% end -%>
}

#
# Function to show service status
#
show_status()
{
<% engine.process_names.each do |name| -%>
  <%= name %>_running && log_action_msg "<%= app %> <%= name %> is running!" || log_action_msg "<%= app %> <%= name %> is not running"

<% end -%>
}


#
# Support functions
#
<% engine.each_process do |name, process| -%>
start_<%= name %>()
{
  su - $USERNAME <<EOS | cut -d ' ' -f 2 > $<%= name %>_pidfile
  cd <%= engine.root %>
  <%= engine.environment.collect { |k,v| "#{k}=#{v} " }.join %><%= process.command %> > /dev/null 2>&1 &
  jobs -l
EOS
  log_end_msg $?
}

<%= name %>_running()
{
  ps -p $(cat $<%= name %>_pidfile 2> /dev/null) > /dev/null 2>&1
}

<% end -%>

case "$1" in
  start)
    log_action_msg "Starting $NAME"
    do_start
    ;;
  stop)
    log_action_msg "Stopping $NAME"
    do_stop
    ;;
  status)
    show_status
    ;;
  restart)
    log_action_msg "Restarting $NAME"
    do_stop
    sleep 1
    do_start
    ;;
  *)
  echo "Usage: <%= app %> {start|stop|status|restart}" >&2
  exit 3
  ;;
esac
